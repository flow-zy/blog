import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as a,f as t}from"./app-BGAn4IFu.js";const s={},o=t(`<p>在ES6中，引入了两个新的变量声明关键字：<code>let</code>和<code>const</code>。相比于传统的<code>var</code>关键字，这两个新的关键字提供了更好的变量作用域控制和不可变性。</p><ol><li>let <ul><li>使用<code>let</code>关键字声明的变量具有块级作用域，只在声明的块内有效。</li><li>块级作用域是指在大括号（{}）中定义的区域，如if语句、循环、函数等具有独立的作用域。</li><li><code>let</code>声明的变量可以在同一作用域中重新赋值，但不允许重复声明同名变量。</li></ul></li></ol><p>示例：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 块级作用域内的变量</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 在 if 块中重新声明一个新的变量 x</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出 2</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出 1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>const</li></ol><ul><li>使用<code>const</code>关键字声明的变量也具有块级作用域，其值在声明后就不可修改（常量）。</li><li><code>const</code>声明的变量必须在声明时进行初始化，且不能再次赋值。</li></ul><p>示例：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> pi <span class="token operator">=</span> <span class="token number">3.14159</span><span class="token punctuation">;</span> <span class="token comment">// 定义一个常量 pi</span>
pi <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// 报错，常量 pi 不可修改</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>块级作用域内的变量无法在声明之前访问，这与<code>var</code>关键字有所不同。另外，<code>let</code>和<code>const</code>声明的变量也不会被添加到全局对象（例如<code>window</code>对象）中。</p><p>使用<code>let</code>和<code>const</code>关键字可以更好地控制变量的作用域和可变性，提高代码的可读性和维护性。在编写ES6代码时，推荐首选使用<code>let</code>和<code>const</code>，只在需要兼容ES5及以下环境或特殊场景时才使用<code>var</code>。</p>`,10),c=[o];function l(p,i){return e(),a("div",null,c)}const u=n(s,[["render",l],["__file","variable.html.vue"]]),m=JSON.parse('{"path":"/js/es/variable.html","title":"变量","lang":"zh-CN","frontmatter":{"title":"变量","icon":"variable","category":["Javascript"],"order":2,"tag":["快速上手"],"description":"在ES6中，引入了两个新的变量声明关键字：let和const。相比于传统的var关键字，这两个新的关键字提供了更好的变量作用域控制和不可变性。 let 使用let关键字声明的变量具有块级作用域，只在声明的块内有效。 块级作用域是指在大括号（{}）中定义的区域，如if语句、循环、函数等具有独立的作用域。 let声明的变量可以在同一作用域中重新赋值，但不允...","head":[["meta",{"property":"og:url","content":"https://github.com/newNotes/js/es/variable.html"}],["meta",{"property":"og:site_name","content":"ZY 学习笔记"}],["meta",{"property":"og:title","content":"变量"}],["meta",{"property":"og:description","content":"在ES6中，引入了两个新的变量声明关键字：let和const。相比于传统的var关键字，这两个新的关键字提供了更好的变量作用域控制和不可变性。 let 使用let关键字声明的变量具有块级作用域，只在声明的块内有效。 块级作用域是指在大括号（{}）中定义的区域，如if语句、循环、函数等具有独立的作用域。 let声明的变量可以在同一作用域中重新赋值，但不允..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-23T14:28:05.000Z"}],["meta",{"property":"article:author","content":"flow-zy"}],["meta",{"property":"article:tag","content":"快速上手"}],["meta",{"property":"article:modified_time","content":"2024-06-23T14:28:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"变量\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-23T14:28:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"flow-zy\\",\\"url\\":\\"https://flow-zy.github.io/newNotes/\\"}]}"]]},"headers":[],"git":{"createdTime":1719152885000,"updatedTime":1719152885000,"contributors":[{"name":"overflow_z","email":"wz19121@eyeah.net","commits":1}]},"readingTime":{"minutes":1.43,"words":429},"filePathRelative":"js/es/variable.md","localizedDate":"2024年6月23日","excerpt":"<p>在ES6中，引入了两个新的变量声明关键字：<code>let</code>和<code>const</code>。相比于传统的<code>var</code>关键字，这两个新的关键字提供了更好的变量作用域控制和不可变性。</p>\\n<ol>\\n<li>let\\n<ul>\\n<li>使用<code>let</code>关键字声明的变量具有块级作用域，只在声明的块内有效。</li>\\n<li>块级作用域是指在大括号（{}）中定义的区域，如if语句、循环、函数等具有独立的作用域。</li>\\n<li><code>let</code>声明的变量可以在同一作用域中重新赋值，但不允许重复声明同名变量。</li>\\n</ul>\\n</li>\\n</ol>","autoDesc":true}');export{u as comp,m as data};
